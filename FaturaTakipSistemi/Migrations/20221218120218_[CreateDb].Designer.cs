// <auto-generated />
using System;
using FaturaTakip.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FaturaTakip.Migrations
{
    [DbContext(typeof(InvoiceTrackContext))]
    [Migration("20221218120218_[CreateDb]")]
    partial class CreateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FaturaTakip.Data.Models.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Block")
                        .HasColumnType("int");

                    b.Property<int>("DoorNumber")
                        .HasColumnType("int");

                    b.Property<short>("Floor")
                        .HasColumnType("smallint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Apartments", (string)null);
                });

            modelBuilder.Entity("FaturaTakip.Data.Models.Debt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Bill")
                        .HasColumnType("int");

                    b.Property<int>("Dues")
                        .HasColumnType("int");

                    b.Property<int>("FKApartmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FKApartmentId");

                    b.ToTable("Debts", (string)null);
                });

            modelBuilder.Entity("FaturaTakip.Data.Models.Landlord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GovermentId")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("YearOfBirth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Landlords", (string)null);
                });

            modelBuilder.Entity("FaturaTakip.Data.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FKLandlordId")
                        .HasColumnType("int");

                    b.Property<int>("FKTenantId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FKLandlordId");

                    b.HasIndex("FKTenantId");

                    b.ToTable("Messages", (string)null);
                });

            modelBuilder.Entity("FaturaTakip.Data.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("FKApartmentId")
                        .HasColumnType("int");

                    b.Property<int>("FKTenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FKApartmentId");

                    b.HasIndex("FKTenantId");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("FaturaTakip.Data.Models.RentedApartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FKApartmentId")
                        .HasColumnType("int");

                    b.Property<int>("FKLandlordId")
                        .HasColumnType("int");

                    b.Property<int>("FKTenantId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FKApartmentId");

                    b.HasIndex("FKLandlordId");

                    b.HasIndex("FKTenantId");

                    b.ToTable("RentedApartments", (string)null);
                });

            modelBuilder.Entity("FaturaTakip.Data.Models.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GovermentId")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LisencePlate")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("YearOfBirth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tenants", (string)null);
                });

            modelBuilder.Entity("FaturaTakip.Data.Models.Debt", b =>
                {
                    b.HasOne("FaturaTakip.Data.Models.Apartment", "Apartment")
                        .WithMany()
                        .HasForeignKey("FKApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("FaturaTakip.Data.Models.Message", b =>
                {
                    b.HasOne("FaturaTakip.Data.Models.Landlord", "Landlord")
                        .WithMany()
                        .HasForeignKey("FKLandlordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FaturaTakip.Data.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("FKTenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Landlord");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FaturaTakip.Data.Models.Payment", b =>
                {
                    b.HasOne("FaturaTakip.Data.Models.Apartment", "Apartment")
                        .WithMany()
                        .HasForeignKey("FKApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FaturaTakip.Data.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("FKTenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FaturaTakip.Data.Models.RentedApartment", b =>
                {
                    b.HasOne("FaturaTakip.Data.Models.Apartment", "Apartment")
                        .WithMany()
                        .HasForeignKey("FKApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FaturaTakip.Data.Models.Landlord", "Landlord")
                        .WithMany()
                        .HasForeignKey("FKLandlordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FaturaTakip.Data.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("FKTenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Landlord");

                    b.Navigation("Tenant");
                });
#pragma warning restore 612, 618
        }
    }
}
